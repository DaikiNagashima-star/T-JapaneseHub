---
import { googleMapsConfig } from '../config/google-maps';

interface Props {
  lat: number;
  lng: number;
  address: string;
}

const { lat, lng, address } = Astro.props;
const GOOGLE_MAPS_API_KEY = googleMapsConfig.apiKey;
---

<div class="map-container">
  {!GOOGLE_MAPS_API_KEY ? (
    <div class="map-fallback">
      <p class="address">{address}</p>
      <p class="map-error">Map temporarily unavailable</p>
    </div>
  ) : (
    <>
      <div id="map" class="map"></div>
      <p class="address">{address}</p>
    </>
  )}
</div>

{GOOGLE_MAPS_API_KEY && (
  <>
    <script define:vars={{ lat, lng, GOOGLE_MAPS_API_KEY }}>
      function initMap() {
        const position = { lat, lng };
        const map = new google.maps.Map(document.getElementById("map"), {
          zoom: 15,
          center: position,
        });
        new google.maps.Marker({
          position,
          map,
        });
      }
      window.initMap = initMap;
    </script>

    <script async
      src={`https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&callback=initMap`}
    ></script>
  </>
)}

<style>
  .map-container {
    margin-top: 2rem;
  }
  .map, .map-fallback {
    width: 100%;
    height: 300px;
    border-radius: 0.5rem;
    margin-bottom: 0.5rem;
  }
  .map-fallback {
    background: #f3f4f6;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 1rem;
  }
  .map-error {
    color: var(--text-secondary);
    font-size: 0.875rem;
    margin-top: 0.5rem;
  }
  .address {
    color: var(--text-secondary);
    font-size: 0.875rem;
  }
</style>