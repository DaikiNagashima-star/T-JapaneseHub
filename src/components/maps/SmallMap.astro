---
interface Props {
  lat: number;
  lng: number;
  height?: string;
}

const { lat, lng, height = "200px" } = Astro.props;
const GOOGLE_MAPS_API_KEY = import.meta.env.PUBLIC_GOOGLE_MAPS_API_KEY;
---

<div class="map-container" style={`height: ${height};`}>
  {!GOOGLE_MAPS_API_KEY ? (
    <div class="map-fallback">
      <svg class="map-icon" viewBox="0 0 24 24" width="24" height="24">
        <path fill="currentColor" d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5a2.5 2.5 0 0 1 0-5 2.5 2.5 0 0 1 0 5z"/>
      </svg>
      <p>Map temporarily unavailable</p>
    </div>
  ) : (
    <div id="map" class="map"></div>
  )}
</div>

{GOOGLE_MAPS_API_KEY && (
  <>
    <script define:vars={{ lat, lng, GOOGLE_MAPS_API_KEY }}>
      function initMap() {
        const position = { lat, lng };
        const map = new google.maps.Map(document.getElementById("map"), {
          zoom: 15,
          center: position,
          mapTypeControl: false,
          streetViewControl: false,
          fullscreenControl: false
        });
        new google.maps.Marker({
          position,
          map,
        });
      }
      window.initMap = initMap;
    </script>

    <script async
      src={`https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAPS_API_KEY}&callback=initMap`}
    ></script>
  </>
)}

<style>
  .map-container {
    width: 100%;
    border-radius: 0.5rem;
    overflow: hidden;
  }
  .map {
    width: 100%;
    height: 100%;
  }
  .map-fallback {
    width: 100%;
    height: 100%;
    background: #f3f4f6;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    font-size: 0.875rem;
  }
  .map-icon {
    opacity: 0.5;
  }
</style>